syntax = "proto3";

package taskbounty.task.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "taskbounty/task/v1/params.proto";
import "taskbounty/task/v1/task.proto";

option go_package = "taskbounty/x/task/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // CreateTask defines the CreateTask RPC.
  rpc CreateTask(MsgCreateTask) returns (MsgCreateTaskResponse);

  // UpdateTask defines the UpdateTask RPC.
  rpc UpdateTask(MsgUpdateTask) returns (MsgUpdateTaskResponse);

  // DeleteTask defines the DeleteTask RPC.
  rpc DeleteTask(MsgDeleteTask) returns (MsgDeleteTaskResponse);
  
  // Custom task management messages
  rpc ClaimTask(MsgClaimTask) returns (MsgClaimTaskResponse);
  rpc SubmitTask(MsgSubmitTask) returns (MsgSubmitTaskResponse);
  rpc ApproveTask(MsgApproveTask) returns (MsgApproveTaskResponse);
  rpc RejectTask(MsgRejectTask) returns (MsgRejectTaskResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "taskbounty/x/task/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgCreateTask defines the MsgCreateTask message.
message MsgCreateTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string title = 2;
  string description = 3;
  cosmos.base.v1beta1.Coin bounty = 4 [(gogoproto.nullable) = false];
  TaskStatus status = 5;
  string claimant = 6 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  TaskProof proof = 7 [(gogoproto.nullable) = false];
  string approver = 8 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgCreateTaskResponse defines the MsgCreateTaskResponse message.
message MsgCreateTaskResponse {
  uint64 id = 1;
}

// MsgUpdateTask defines the MsgUpdateTask message.
message MsgUpdateTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  string title = 3;
  string description = 4;
  cosmos.base.v1beta1.Coin bounty = 5 [(gogoproto.nullable) = false];
  TaskStatus status = 6;
  string claimant = 7 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  TaskProof proof = 8 [(gogoproto.nullable) = false];
  string approver = 9 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgUpdateTaskResponse defines the MsgUpdateTaskResponse message.
message MsgUpdateTaskResponse {}

// MsgDeleteTask defines the MsgDeleteTask message.
message MsgDeleteTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
}

// MsgDeleteTaskResponse defines the MsgDeleteTaskResponse message.
message MsgDeleteTaskResponse {}

// MsgClaimTask defines the ClaimTask message.
message MsgClaimTask {
  option (cosmos.msg.v1.signer) = "claimant";
  string claimant = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
}

// MsgClaimTaskResponse defines the ClaimTaskResponse message.
message MsgClaimTaskResponse {}

// MsgSubmitTask defines the SubmitTask message.
message MsgSubmitTask {
  option (cosmos.msg.v1.signer) = "claimant";
  string claimant = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  TaskProof proof = 3 [(gogoproto.nullable) = false];
}

// MsgSubmitTaskResponse defines the SubmitTaskResponse message.
message MsgSubmitTaskResponse {}

// MsgApproveTask defines the ApproveTask message.
message MsgApproveTask {
  option (cosmos.msg.v1.signer) = "approver";
  string approver = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  string tx_hash = 3;
}

// MsgApproveTaskResponse defines the ApproveTaskResponse message.
message MsgApproveTaskResponse {}

// MsgRejectTask defines the RejectTask message.
message MsgRejectTask {
  option (cosmos.msg.v1.signer) = "rejecter";
  string rejecter = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  string reason = 3;
}

// MsgRejectTaskResponse defines the RejectTaskResponse message.
message MsgRejectTaskResponse {}
